from config import Config
from helper.database import db
from pyrogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from pyrogram import Client, filters
from pyrogram.errors import FloodWait, InputUserDeactivated, UserIsBlocked, PeerIdInvalid
import os
import sys
import time
import asyncio
import logging
import datetime

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞
@Client.on_message(filters.command(["stats", "status"]) & filters.user(Config.ADMIN))
async def get_stats(bot, message):
    total_users = await db.total_users_count()
    uptime = time.strftime("%H—á %M–º %S—Å", time.gmtime(time.time() - Config.BOT_UPTIME))
    start_t = time.time()
    st = await message.reply('**–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...**')
    end_t = time.time()
    time_taken_s = (end_t - start_t) * 1000
    await st.edit(text=f"**--–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞--** \n\n**‚åöÔ∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:** {uptime} \n**üêå –¢–µ–∫—É—â–∏–π –ø–∏–Ω–≥:** `{time_taken_s:.3f} –º—Å` \n**üë≠ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** `{total_users}`")


# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
@Client.on_message(filters.private & filters.command("restart") & filters.user(Config.ADMIN))
async def restart_bot(b, m):
    await m.reply_text("üîÑ__–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫.....__")
    os.execl(sys.executable, sys.executable, *sys.argv)


# –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∞–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞
@Client.on_message(filters.command("broadcast") & filters.user(Config.ADMIN) & filters.reply)
async def broadcast_handler(bot: Client, m: Message):
    await bot.send_message(Config.LOG_CHANNEL, f"{m.from_user.mention} –∏–ª–∏ {m.from_user.id} –Ω–∞—á–∞–ª —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π...")
    all_users = await db.get_all_users()
    broadcast_msg = m.reply_to_message
    sts_msg = await m.reply_text("–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å..!")
    done = 0
    failed = 0
    success = 0
    start_time = time.time()
    total_users = await db.total_users_count()
    async for user in all_users:
        sts = await send_msg(user['id'], broadcast_msg)
        if sts == 200:
            success += 1
        else:
            failed += 1
        if sts == 400:
            await db.delete_user(user['id'])
        done += 1
        if not done % 20:
            await sts_msg.edit(f"–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞—Å—Å—ã–ª–∫–∏: \n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {total_users} \n–ó–∞–≤–µ—Ä—à–µ–Ω–æ: {done} / {total_users}\n–£—Å–ø–µ—à–Ω–æ: {success}\n–ù–µ—É–¥–∞—á–Ω–æ: {failed}")
    completed_in = datetime.timedelta(seconds=int(time.time() - start_time))
    await sts_msg.edit(f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: \n–ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ `{completed_in}`.\n\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {total_users}\n–ó–∞–≤–µ—Ä—à–µ–Ω–æ: {done} / {total_users}\n–£—Å–ø–µ—à–Ω–æ: {success}\n–ù–µ—É–¥–∞—á–Ω–æ: {failed}")


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
async def send_msg(user_id, message):
    try:
        await message.forward(chat_id=int(user_id))
        return 200
    except FloodWait as e:
        await asyncio.sleep(e.value)
        return send_msg(user_id, message)
    except InputUserDeactivated:
        logger.info(f"{user_id} : –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        return 400
    except UserIsBlocked:
        logger.info(f"{user_id} : –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
        return 400
    except PeerIdInvalid:
        logger.info(f"{user_id} : –ù–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        return 400
    except Exception as e:
        logger.error(f"{user_id} : {e}")
        return 500


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@Client.on_message(filters.private & filters.command('acceptall') & filters.user(Config.ADMIN))
async def handle_acceptall(bot: Client, message: Message):
    ms = await message.reply_text("**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...**", reply_to_message_id=message.id)
    chat_ids = await db.get_channel(Config.ADMIN)

    if len(list(chat_ids)) == 0:
        return await ms.edit("**–Ø –Ω–µ —è–≤–ª—è—é—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ –∏–ª–∏ –≥—Ä—É–ø–ø–µ!**")

    button = []
    for id in chat_ids:
        info = await bot.get_chat(id)
        button.append([InlineKeyboardButton(
            f"{info.title} {str(info.type).split('.')[1]}", callback_data=f'acceptallchat_{id}')])

    await ms.edit("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n\n–ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∫–∞–Ω–∞–ª—ã –∏–ª–∏ –≥—Ä—É–ø–ø—ã, –≥–¥–µ —è —è–≤–ª—è—é—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", reply_markup=InlineKeyboardMarkup(button))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@Client.on_message(filters.private & filters.command('declineall') & filters.user(Config.ADMIN))
async def handle_declineall(bot:Client, message: Message):
    ms = await message.reply_text("**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...**", reply_to_message_id=message.id)
    chat_ids = await db.get_channel(Config.ADMIN)
    
    if len(list(chat_ids)) == 0:
        return await ms.edit("**–Ø –Ω–µ —è–≤–ª—è—é—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ –∏–ª–∏ –≥—Ä—É–ø–ø–µ!**")
        
    button = []
    for id in chat_ids:
        info = await bot.get_chat(id)
        button.append([InlineKeyboardButton(
            f"{info.title} {str(info.type).split('.')[1]}", callback_data=f'declineallchat_{id}')])

    await ms.edit("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n\n–ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∫–∞–Ω–∞–ª—ã –∏–ª–∏ –≥—Ä—É–ø–ø—ã, –≥–¥–µ —è —è–≤–ª—è—é—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", reply_markup=InlineKeyboardMarkup(button))
    
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@Client.on_callback_query(filters.regex('^acceptallchat_'))
async def handle_accept_pending_request(bot: Client, update: CallbackQuery):
    await update.message.edit("**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã... ‚ôªÔ∏è**")
    chat_id = update.data.split('_')[1]
    try:
        await user.approve_all_chat_join_requests(chat_id=chat_id)
    except Exception as e:
        return await update.message.edit(f"**–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòµ\n\n –û—à–∏–±–∫–∞ ‚ùó ‚ûú __{e}__\n\n **–û–®–ò–ë–ö–ê !")

    await update.message.edit("**–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞** ‚úì **–ü—Ä–∏–Ω—è—Ç—ã ‚úÖ –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ**")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@Client.on_callback_query(filters.regex('^declineallchat_'))
async def handle_delcine_pending_request(bot: Client, update: CallbackQuery):
    await update.message.edit("**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –æ—Ç–∫–ª–æ–Ω—è—é—Ç—Å—è –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã... ‚ôªÔ∏è**")
    chat_id = update.data.split('_')[1]
    try:
        await user.decline_all_chat_join_requests(chat_id=chat_id)
    except Exception as e:
        return await update.message.edit(f"**–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòµ\n\n –û—à–∏–±–∫–∞ ‚ùó ‚ûú __{e}__\n\n **–û–®–ò–ë–ö–ê !")

    await update.message.edit("**–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞** ‚úì **–û—Ç–∫–ª–æ–Ω–µ–Ω—ã ‚ùå –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ**")
